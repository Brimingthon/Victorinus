# üìÅ commands/quiz.py
import discord
from discord import app_commands
from db import repository
from services.quiz_logic import load_quiz, list_quizzes
from views.quiz_view import QuizView, ConfirmView

# === –ê–≤—Ç–æ–∫–æ–º–ø–ª—ñ—Ç ===
async def autocomplete_quizzes(interaction: discord.Interaction, current: str):
    return [
        app_commands.Choice(name=q, value=q)
        for q in list_quizzes() if current.lower() in q.lower()
    ][:25]

@app_commands.command(name="quiz", description="–ü–æ—á–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É")
@app_commands.describe(name="–ù–∞–∑–≤–∞ –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏")
@app_commands.autocomplete(name=autocomplete_quizzes)
async def quiz(interaction: discord.Interaction, name: str):
    user = interaction.user
    config = load_quiz(name)
    if not config:
        await interaction.response.send_message("‚ùå –í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        return

    attempt_count = await repository.get_attempt_count(str(user.id), name)
    if attempt_count >= config.attempts:
        await interaction.response.send_message("‚ùó –¢–∏ –≤–∏—á–µ—Ä–ø–∞–≤(-–ª–∞) –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–± –Ω–∞ —Ü—é –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É.", ephemeral=True)
        return

    await interaction.response.send_message("üì¨ –ü–µ—Ä–µ–≤—ñ—Ä —Å–≤–æ—ó DM ‚Äî –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ —Ç—É–¥–∏.", ephemeral=True)

    try:
        dm = await user.create_dm()
        await dm.send(f"üì© –¢–∏ –≥–æ—Ç–æ–≤–∏–π(-–∞) –¥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏ **{name}**?")
        view = ConfirmView(user)
        msg = await dm.send("–ù–∞—Ç–∏—Å–Ω–∏ \"–ü–æ—á–∞—Ç–∏\", —â–æ–± –ø–æ—á–∞—Ç–∏, –∞–±–æ \"–°–∫–∞—Å—É–≤–∞—Ç–∏\":", view=view)
        await view.wait()
        if not view.confirmed:
            return
    except discord.Forbidden:
        await interaction.response.send_message("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ DM.", ephemeral=True)
        return

    score = 0
    messages_to_delete = []
    for q in config.questions:
        options = "\n".join([f"{chr(0x0410 + i)}. {opt}" for i, opt in enumerate(q.options)])
        msg = await dm.send(f"‚ùì {q.question}\n\n{options}")
        messages_to_delete.append(msg)
        view = QuizView(user, q.answer_index, q.timeout)
        await msg.edit(view=view)
        await view.wait()

        is_correct = (view.selected_index == q.answer_index)
        points = max(0, 100 - view.elapsed * 5) if is_correct else 0
        score += points

        if config.show_feedback:
            feedback = await dm.send("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!" if is_correct else "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
            messages_to_delete.append(feedback)

    await repository.save_result(str(user.id), user.name, name, score)
    final_msg = await dm.send(f"üèÅ –í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ **{name}** –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–≤—ñ–π —Ä–∞—Ö—É–Ω–æ–∫: **{score} –±–∞–ª—ñ–≤**.")
    messages_to_delete.append(final_msg)

    if config.auto_delete_dm:
        import asyncio
        await asyncio.sleep(20)
        for m in messages_to_delete:
            try:
                await m.delete()
            except (discord.Forbidden, discord.HTTPException):
                continue

@app_commands.command(name="ranking", description="–ü–æ–∫–∞–∑–∞—Ç–∏ –¢–û–ü-5 –ø–æ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—ñ")
@app_commands.describe(name="–ù–∞–∑–≤–∞ –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏")
@app_commands.autocomplete(name=autocomplete_quizzes)
async def ranking(interaction: discord.Interaction, name: str):
    results = await repository.get_top_results(name)
    if not results:
        await interaction.response.send_message("–ù–µ–º–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –¥–ª—è —Ü—ñ—î—ó –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏.", ephemeral=True)
        return
    top = "\n".join([f"{i+1}. {username} ‚Äî {score} –±–∞–ª—ñ–≤" for i, (username, score) in enumerate(results)])
    await interaction.response.send_message(f"üèÜ **–¢–û–ü-5 ‚Äî {name}:**\n{top}")

@app_commands.command(name="quizzes", description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤—ñ–∫—Ç–æ—Ä–∏–Ω")
async def quizzes(interaction: discord.Interaction):
    names = list_quizzes()
    if not names:
        await interaction.response.send_message("–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤—ñ–∫—Ç–æ—Ä–∏–Ω.", ephemeral=True)
        return
    await interaction.response.send_message("üìö –î–æ—Å—Ç—É–ø–Ω—ñ –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏:\n" + "\n".join(f"- {n}" for n in names), ephemeral=True)

# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ–º–∞–Ω–¥ ===
def setup_commands(bot: discord.ext.commands.Bot):
    bot.tree.add_command(quiz)
    bot.tree.add_command(ranking)
    bot.tree.add_command(quizzes)
